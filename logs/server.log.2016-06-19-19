[2016-06-19 19:59:37,802] INFO Verifying properties (kafka.utils.VerifiableProperties)
[2016-06-19 19:59:37,834] INFO Property metadata.broker.list is overridden to 192.168.99.100:9092 (kafka.utils.VerifiableProperties)
[2016-06-19 19:59:37,836] INFO Property request.required.acks is overridden to 1 (kafka.utils.VerifiableProperties)
[2016-06-19 19:59:37,837] INFO Property serializer.class is overridden to kafka.serializer.StringEncoder (kafka.utils.VerifiableProperties)
[2016-06-19 19:59:38,253] INFO Verifying properties (kafka.utils.VerifiableProperties)
[2016-06-19 19:59:38,254] INFO Property metadata.broker.list is overridden to 192.168.99.100:9092 (kafka.utils.VerifiableProperties)
[2016-06-19 19:59:38,256] INFO Property request.required.acks is overridden to 1 (kafka.utils.VerifiableProperties)
[2016-06-19 19:59:38,257] INFO Property serializer.class is overridden to kafka.serializer.StringEncoder (kafka.utils.VerifiableProperties)
[2016-06-19 19:59:40,422] INFO Fetching metadata from broker id:0,host:192.168.99.100,port:9092 with correlation id 0 for 1 topic(s) Set(tweet) (kafka.client.ClientUtils$)
[2016-06-19 19:59:40,453] INFO Connected to 192.168.99.100:9092 for producing (kafka.producer.SyncProducer)
[2016-06-19 19:59:40,573] INFO Disconnecting from 192.168.99.100:9092 (kafka.producer.SyncProducer)
[2016-06-19 19:59:40,861] INFO Connected to 08d3fe80042a:9092 for producing (kafka.producer.SyncProducer)
[2016-06-19 19:59:40,862] INFO Disconnecting from 08d3fe80042a:9092 (kafka.producer.SyncProducer)
[2016-06-19 19:59:40,870] WARN Failed to send producer request with correlation id 2 to broker 0 with data for partitions [tweet,0] (kafka.producer.async.DefaultEventHandler)
java.nio.channels.ClosedChannelException
	at kafka.network.BlockingChannel.send(BlockingChannel.scala:100)
	at kafka.producer.SyncProducer.liftedTree1$1(SyncProducer.scala:73)
	at kafka.producer.SyncProducer.kafka$producer$SyncProducer$$doSend(SyncProducer.scala:72)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply$mcV$sp(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply$mcV$sp(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer.send(SyncProducer.scala:101)
	at kafka.producer.async.DefaultEventHandler.kafka$producer$async$DefaultEventHandler$$send(DefaultEventHandler.scala:255)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:106)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:100)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:733)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:230)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:40)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:99)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:732)
	at kafka.producer.async.DefaultEventHandler.dispatchSerializedData(DefaultEventHandler.scala:100)
	at kafka.producer.async.DefaultEventHandler.handle(DefaultEventHandler.scala:72)
	at kafka.producer.Producer.send(Producer.scala:77)
	at com.twitter.producer.TwitterStreamListener.onStatus(TwitterStreamListener.scala:19)
	at twitter4j.StatusStreamImpl.onStatus(StatusStreamImpl.java:75)
	at twitter4j.StatusStreamBase$1.run(StatusStreamBase.java:105)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
[2016-06-19 19:59:40,886] INFO Back off for 100 ms before retrying send. Remaining retries = 3 (kafka.producer.async.DefaultEventHandler)
[2016-06-19 19:59:40,992] INFO Fetching metadata from broker id:0,host:192.168.99.100,port:9092 with correlation id 3 for 1 topic(s) Set(tweet) (kafka.client.ClientUtils$)
[2016-06-19 19:59:40,994] INFO Connected to 192.168.99.100:9092 for producing (kafka.producer.SyncProducer)
[2016-06-19 19:59:40,998] INFO Disconnecting from 192.168.99.100:9092 (kafka.producer.SyncProducer)
[2016-06-19 19:59:41,001] INFO Disconnecting from 08d3fe80042a:9092 (kafka.producer.SyncProducer)
[2016-06-19 19:59:41,002] INFO Connected to 08d3fe80042a:9092 for producing (kafka.producer.SyncProducer)
[2016-06-19 19:59:41,003] INFO Disconnecting from 08d3fe80042a:9092 (kafka.producer.SyncProducer)
[2016-06-19 19:59:41,005] WARN Failed to send producer request with correlation id 5 to broker 0 with data for partitions [tweet,0] (kafka.producer.async.DefaultEventHandler)
java.nio.channels.ClosedChannelException
	at kafka.network.BlockingChannel.send(BlockingChannel.scala:100)
	at kafka.producer.SyncProducer.liftedTree1$1(SyncProducer.scala:73)
	at kafka.producer.SyncProducer.kafka$producer$SyncProducer$$doSend(SyncProducer.scala:72)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply$mcV$sp(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply$mcV$sp(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer.send(SyncProducer.scala:101)
	at kafka.producer.async.DefaultEventHandler.kafka$producer$async$DefaultEventHandler$$send(DefaultEventHandler.scala:255)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:106)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:100)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:733)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:230)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:40)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:99)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:732)
	at kafka.producer.async.DefaultEventHandler.dispatchSerializedData(DefaultEventHandler.scala:100)
	at kafka.producer.async.DefaultEventHandler.handle(DefaultEventHandler.scala:72)
	at kafka.producer.Producer.send(Producer.scala:77)
	at com.twitter.producer.TwitterStreamListener.onStatus(TwitterStreamListener.scala:19)
	at twitter4j.StatusStreamImpl.onStatus(StatusStreamImpl.java:75)
	at twitter4j.StatusStreamBase$1.run(StatusStreamBase.java:105)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
[2016-06-19 19:59:41,015] INFO Back off for 100 ms before retrying send. Remaining retries = 2 (kafka.producer.async.DefaultEventHandler)
[2016-06-19 19:59:41,117] INFO Fetching metadata from broker id:0,host:192.168.99.100,port:9092 with correlation id 6 for 1 topic(s) Set(tweet) (kafka.client.ClientUtils$)
[2016-06-19 19:59:41,122] INFO Connected to 192.168.99.100:9092 for producing (kafka.producer.SyncProducer)
[2016-06-19 19:59:41,126] INFO Disconnecting from 192.168.99.100:9092 (kafka.producer.SyncProducer)
[2016-06-19 19:59:41,128] INFO Disconnecting from 08d3fe80042a:9092 (kafka.producer.SyncProducer)
[2016-06-19 19:59:41,131] INFO Connected to 08d3fe80042a:9092 for producing (kafka.producer.SyncProducer)
[2016-06-19 19:59:41,132] INFO Disconnecting from 08d3fe80042a:9092 (kafka.producer.SyncProducer)
[2016-06-19 19:59:41,137] WARN Failed to send producer request with correlation id 8 to broker 0 with data for partitions [tweet,0] (kafka.producer.async.DefaultEventHandler)
java.nio.channels.ClosedChannelException
	at kafka.network.BlockingChannel.send(BlockingChannel.scala:100)
	at kafka.producer.SyncProducer.liftedTree1$1(SyncProducer.scala:73)
	at kafka.producer.SyncProducer.kafka$producer$SyncProducer$$doSend(SyncProducer.scala:72)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply$mcV$sp(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply$mcV$sp(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer.send(SyncProducer.scala:101)
	at kafka.producer.async.DefaultEventHandler.kafka$producer$async$DefaultEventHandler$$send(DefaultEventHandler.scala:255)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:106)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:100)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:733)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:230)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:40)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:99)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:732)
	at kafka.producer.async.DefaultEventHandler.dispatchSerializedData(DefaultEventHandler.scala:100)
	at kafka.producer.async.DefaultEventHandler.handle(DefaultEventHandler.scala:72)
	at kafka.producer.Producer.send(Producer.scala:77)
	at com.twitter.producer.TwitterStreamListener.onStatus(TwitterStreamListener.scala:19)
	at twitter4j.StatusStreamImpl.onStatus(StatusStreamImpl.java:75)
	at twitter4j.StatusStreamBase$1.run(StatusStreamBase.java:105)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
[2016-06-19 19:59:41,147] INFO Back off for 100 ms before retrying send. Remaining retries = 1 (kafka.producer.async.DefaultEventHandler)
[2016-06-19 19:59:41,250] INFO Fetching metadata from broker id:0,host:192.168.99.100,port:9092 with correlation id 9 for 1 topic(s) Set(tweet) (kafka.client.ClientUtils$)
[2016-06-19 19:59:41,254] INFO Connected to 192.168.99.100:9092 for producing (kafka.producer.SyncProducer)
[2016-06-19 19:59:41,257] INFO Disconnecting from 192.168.99.100:9092 (kafka.producer.SyncProducer)
[2016-06-19 19:59:41,259] INFO Disconnecting from 08d3fe80042a:9092 (kafka.producer.SyncProducer)
[2016-06-19 19:59:41,260] INFO Connected to 08d3fe80042a:9092 for producing (kafka.producer.SyncProducer)
[2016-06-19 19:59:41,262] INFO Disconnecting from 08d3fe80042a:9092 (kafka.producer.SyncProducer)
[2016-06-19 19:59:41,264] WARN Failed to send producer request with correlation id 11 to broker 0 with data for partitions [tweet,0] (kafka.producer.async.DefaultEventHandler)
java.nio.channels.ClosedChannelException
	at kafka.network.BlockingChannel.send(BlockingChannel.scala:100)
	at kafka.producer.SyncProducer.liftedTree1$1(SyncProducer.scala:73)
	at kafka.producer.SyncProducer.kafka$producer$SyncProducer$$doSend(SyncProducer.scala:72)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply$mcV$sp(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply$mcV$sp(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer.send(SyncProducer.scala:101)
	at kafka.producer.async.DefaultEventHandler.kafka$producer$async$DefaultEventHandler$$send(DefaultEventHandler.scala:255)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:106)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:100)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:733)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:230)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:40)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:99)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:732)
	at kafka.producer.async.DefaultEventHandler.dispatchSerializedData(DefaultEventHandler.scala:100)
	at kafka.producer.async.DefaultEventHandler.handle(DefaultEventHandler.scala:72)
	at kafka.producer.Producer.send(Producer.scala:77)
	at com.twitter.producer.TwitterStreamListener.onStatus(TwitterStreamListener.scala:19)
	at twitter4j.StatusStreamImpl.onStatus(StatusStreamImpl.java:75)
	at twitter4j.StatusStreamBase$1.run(StatusStreamBase.java:105)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
[2016-06-19 19:59:41,270] INFO Back off for 100 ms before retrying send. Remaining retries = 0 (kafka.producer.async.DefaultEventHandler)
[2016-06-19 19:59:41,372] INFO Fetching metadata from broker id:0,host:192.168.99.100,port:9092 with correlation id 12 for 1 topic(s) Set(tweet) (kafka.client.ClientUtils$)
[2016-06-19 19:59:41,375] INFO Connected to 192.168.99.100:9092 for producing (kafka.producer.SyncProducer)
[2016-06-19 19:59:41,377] INFO Disconnecting from 192.168.99.100:9092 (kafka.producer.SyncProducer)
[2016-06-19 19:59:41,379] INFO Disconnecting from 08d3fe80042a:9092 (kafka.producer.SyncProducer)
[2016-06-19 19:59:41,384] ERROR Failed to send requests for topics tweet with correlation ids in [0,12] (kafka.producer.async.DefaultEventHandler)
[2016-06-19 19:59:41,519] INFO Connected to 08d3fe80042a:9092 for producing (kafka.producer.SyncProducer)
[2016-06-19 19:59:41,528] INFO Disconnecting from 08d3fe80042a:9092 (kafka.producer.SyncProducer)
[2016-06-19 19:59:41,531] WARN Failed to send producer request with correlation id 14 to broker 0 with data for partitions [tweet,0] (kafka.producer.async.DefaultEventHandler)
java.nio.channels.ClosedChannelException
	at kafka.network.BlockingChannel.send(BlockingChannel.scala:100)
	at kafka.producer.SyncProducer.liftedTree1$1(SyncProducer.scala:73)
	at kafka.producer.SyncProducer.kafka$producer$SyncProducer$$doSend(SyncProducer.scala:72)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply$mcV$sp(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply$mcV$sp(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer.send(SyncProducer.scala:101)
	at kafka.producer.async.DefaultEventHandler.kafka$producer$async$DefaultEventHandler$$send(DefaultEventHandler.scala:255)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:106)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:100)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:733)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:230)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:40)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:99)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:732)
	at kafka.producer.async.DefaultEventHandler.dispatchSerializedData(DefaultEventHandler.scala:100)
	at kafka.producer.async.DefaultEventHandler.handle(DefaultEventHandler.scala:72)
	at kafka.producer.Producer.send(Producer.scala:77)
	at com.twitter.producer.TwitterStreamListener.onStatus(TwitterStreamListener.scala:19)
	at twitter4j.StatusStreamImpl.onStatus(StatusStreamImpl.java:75)
	at twitter4j.StatusStreamBase$1.run(StatusStreamBase.java:105)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
[2016-06-19 19:59:41,541] INFO Back off for 100 ms before retrying send. Remaining retries = 3 (kafka.producer.async.DefaultEventHandler)
[2016-06-19 19:59:41,642] INFO Fetching metadata from broker id:0,host:192.168.99.100,port:9092 with correlation id 15 for 1 topic(s) Set(tweet) (kafka.client.ClientUtils$)
[2016-06-19 19:59:41,650] INFO Connected to 192.168.99.100:9092 for producing (kafka.producer.SyncProducer)
[2016-06-19 19:59:41,656] INFO Disconnecting from 192.168.99.100:9092 (kafka.producer.SyncProducer)
[2016-06-19 19:59:41,692] INFO Disconnecting from 08d3fe80042a:9092 (kafka.producer.SyncProducer)
[2016-06-19 19:59:41,696] INFO Connected to 08d3fe80042a:9092 for producing (kafka.producer.SyncProducer)
[2016-06-19 19:59:41,698] INFO Disconnecting from 08d3fe80042a:9092 (kafka.producer.SyncProducer)
[2016-06-19 19:59:41,702] WARN Failed to send producer request with correlation id 17 to broker 0 with data for partitions [tweet,0] (kafka.producer.async.DefaultEventHandler)
java.nio.channels.ClosedChannelException
	at kafka.network.BlockingChannel.send(BlockingChannel.scala:100)
	at kafka.producer.SyncProducer.liftedTree1$1(SyncProducer.scala:73)
	at kafka.producer.SyncProducer.kafka$producer$SyncProducer$$doSend(SyncProducer.scala:72)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply$mcV$sp(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply$mcV$sp(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer.send(SyncProducer.scala:101)
	at kafka.producer.async.DefaultEventHandler.kafka$producer$async$DefaultEventHandler$$send(DefaultEventHandler.scala:255)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:106)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:100)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:733)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:230)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:40)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:99)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:732)
	at kafka.producer.async.DefaultEventHandler.dispatchSerializedData(DefaultEventHandler.scala:100)
	at kafka.producer.async.DefaultEventHandler.handle(DefaultEventHandler.scala:72)
	at kafka.producer.Producer.send(Producer.scala:77)
	at com.twitter.producer.TwitterStreamListener.onStatus(TwitterStreamListener.scala:19)
	at twitter4j.StatusStreamImpl.onStatus(StatusStreamImpl.java:75)
	at twitter4j.StatusStreamBase$1.run(StatusStreamBase.java:105)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
[2016-06-19 19:59:41,712] INFO Back off for 100 ms before retrying send. Remaining retries = 2 (kafka.producer.async.DefaultEventHandler)
[2016-06-19 19:59:41,815] INFO Fetching metadata from broker id:0,host:192.168.99.100,port:9092 with correlation id 18 for 1 topic(s) Set(tweet) (kafka.client.ClientUtils$)
[2016-06-19 19:59:41,819] INFO Connected to 192.168.99.100:9092 for producing (kafka.producer.SyncProducer)
[2016-06-19 19:59:41,831] INFO Disconnecting from 192.168.99.100:9092 (kafka.producer.SyncProducer)
