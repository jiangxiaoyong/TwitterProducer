[2016-06-19 20:05:48,907] INFO Verifying properties (kafka.utils.VerifiableProperties)
[2016-06-19 20:05:48,933] INFO Property metadata.broker.list is overridden to 192.168.99.100:9092 (kafka.utils.VerifiableProperties)
[2016-06-19 20:05:48,935] INFO Property request.required.acks is overridden to 1 (kafka.utils.VerifiableProperties)
[2016-06-19 20:05:48,935] INFO Property serializer.class is overridden to kafka.serializer.StringEncoder (kafka.utils.VerifiableProperties)
[2016-06-19 20:05:49,274] INFO Verifying properties (kafka.utils.VerifiableProperties)
[2016-06-19 20:05:49,276] INFO Property metadata.broker.list is overridden to 192.168.99.100:9092 (kafka.utils.VerifiableProperties)
[2016-06-19 20:05:49,278] INFO Property request.required.acks is overridden to 1 (kafka.utils.VerifiableProperties)
[2016-06-19 20:05:49,279] INFO Property serializer.class is overridden to kafka.serializer.StringEncoder (kafka.utils.VerifiableProperties)
[2016-06-19 20:05:51,299] INFO Fetching metadata from broker id:0,host:192.168.99.100,port:9092 with correlation id 0 for 1 topic(s) Set(tweet) (kafka.client.ClientUtils$)
[2016-06-19 20:05:51,316] INFO Connected to 192.168.99.100:9092 for producing (kafka.producer.SyncProducer)
[2016-06-19 20:05:51,386] INFO Disconnecting from 192.168.99.100:9092 (kafka.producer.SyncProducer)
[2016-06-19 20:05:51,698] INFO Connected to 08d3fe80042a:9092 for producing (kafka.producer.SyncProducer)
[2016-06-19 20:05:51,703] INFO Disconnecting from 08d3fe80042a:9092 (kafka.producer.SyncProducer)
[2016-06-19 20:05:51,712] WARN Failed to send producer request with correlation id 2 to broker 0 with data for partitions [tweet,0] (kafka.producer.async.DefaultEventHandler)
java.nio.channels.ClosedChannelException
	at kafka.network.BlockingChannel.send(BlockingChannel.scala:100)
	at kafka.producer.SyncProducer.liftedTree1$1(SyncProducer.scala:73)
	at kafka.producer.SyncProducer.kafka$producer$SyncProducer$$doSend(SyncProducer.scala:72)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply$mcV$sp(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply$mcV$sp(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer.send(SyncProducer.scala:101)
	at kafka.producer.async.DefaultEventHandler.kafka$producer$async$DefaultEventHandler$$send(DefaultEventHandler.scala:255)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:106)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:100)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:733)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:230)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:40)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:99)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:732)
	at kafka.producer.async.DefaultEventHandler.dispatchSerializedData(DefaultEventHandler.scala:100)
	at kafka.producer.async.DefaultEventHandler.handle(DefaultEventHandler.scala:72)
	at kafka.producer.Producer.send(Producer.scala:77)
	at com.twitter.producer.TwitterStreamListener.onStatus(TwitterStreamListener.scala:19)
	at twitter4j.StatusStreamImpl.onStatus(StatusStreamImpl.java:75)
	at twitter4j.StatusStreamBase$1.run(StatusStreamBase.java:105)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
[2016-06-19 20:05:51,728] INFO Back off for 100 ms before retrying send. Remaining retries = 3 (kafka.producer.async.DefaultEventHandler)
[2016-06-19 20:05:51,832] INFO Fetching metadata from broker id:0,host:192.168.99.100,port:9092 with correlation id 3 for 1 topic(s) Set(tweet) (kafka.client.ClientUtils$)
[2016-06-19 20:05:51,834] INFO Connected to 192.168.99.100:9092 for producing (kafka.producer.SyncProducer)
[2016-06-19 20:05:51,840] INFO Disconnecting from 192.168.99.100:9092 (kafka.producer.SyncProducer)
[2016-06-19 20:05:51,841] INFO Disconnecting from 08d3fe80042a:9092 (kafka.producer.SyncProducer)
[2016-06-19 20:05:51,843] INFO Connected to 08d3fe80042a:9092 for producing (kafka.producer.SyncProducer)
[2016-06-19 20:05:51,844] INFO Disconnecting from 08d3fe80042a:9092 (kafka.producer.SyncProducer)
[2016-06-19 20:05:51,845] WARN Failed to send producer request with correlation id 5 to broker 0 with data for partitions [tweet,0] (kafka.producer.async.DefaultEventHandler)
java.nio.channels.ClosedChannelException
	at kafka.network.BlockingChannel.send(BlockingChannel.scala:100)
	at kafka.producer.SyncProducer.liftedTree1$1(SyncProducer.scala:73)
	at kafka.producer.SyncProducer.kafka$producer$SyncProducer$$doSend(SyncProducer.scala:72)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply$mcV$sp(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply$mcV$sp(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer.send(SyncProducer.scala:101)
	at kafka.producer.async.DefaultEventHandler.kafka$producer$async$DefaultEventHandler$$send(DefaultEventHandler.scala:255)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:106)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:100)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:733)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:230)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:40)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:99)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:732)
	at kafka.producer.async.DefaultEventHandler.dispatchSerializedData(DefaultEventHandler.scala:100)
	at kafka.producer.async.DefaultEventHandler.handle(DefaultEventHandler.scala:72)
	at kafka.producer.Producer.send(Producer.scala:77)
	at com.twitter.producer.TwitterStreamListener.onStatus(TwitterStreamListener.scala:19)
	at twitter4j.StatusStreamImpl.onStatus(StatusStreamImpl.java:75)
	at twitter4j.StatusStreamBase$1.run(StatusStreamBase.java:105)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
[2016-06-19 20:05:51,854] INFO Back off for 100 ms before retrying send. Remaining retries = 2 (kafka.producer.async.DefaultEventHandler)
[2016-06-19 20:05:51,958] INFO Fetching metadata from broker id:0,host:192.168.99.100,port:9092 with correlation id 6 for 1 topic(s) Set(tweet) (kafka.client.ClientUtils$)
[2016-06-19 20:05:51,962] INFO Connected to 192.168.99.100:9092 for producing (kafka.producer.SyncProducer)
[2016-06-19 20:05:51,966] INFO Disconnecting from 192.168.99.100:9092 (kafka.producer.SyncProducer)
[2016-06-19 20:05:51,968] INFO Disconnecting from 08d3fe80042a:9092 (kafka.producer.SyncProducer)
[2016-06-19 20:05:51,971] INFO Connected to 08d3fe80042a:9092 for producing (kafka.producer.SyncProducer)
[2016-06-19 20:05:51,973] INFO Disconnecting from 08d3fe80042a:9092 (kafka.producer.SyncProducer)
[2016-06-19 20:05:51,975] WARN Failed to send producer request with correlation id 8 to broker 0 with data for partitions [tweet,0] (kafka.producer.async.DefaultEventHandler)
java.nio.channels.ClosedChannelException
	at kafka.network.BlockingChannel.send(BlockingChannel.scala:100)
	at kafka.producer.SyncProducer.liftedTree1$1(SyncProducer.scala:73)
	at kafka.producer.SyncProducer.kafka$producer$SyncProducer$$doSend(SyncProducer.scala:72)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply$mcV$sp(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply$mcV$sp(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer.send(SyncProducer.scala:101)
	at kafka.producer.async.DefaultEventHandler.kafka$producer$async$DefaultEventHandler$$send(DefaultEventHandler.scala:255)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:106)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:100)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:733)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:230)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:40)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:99)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:732)
	at kafka.producer.async.DefaultEventHandler.dispatchSerializedData(DefaultEventHandler.scala:100)
	at kafka.producer.async.DefaultEventHandler.handle(DefaultEventHandler.scala:72)
	at kafka.producer.Producer.send(Producer.scala:77)
	at com.twitter.producer.TwitterStreamListener.onStatus(TwitterStreamListener.scala:19)
	at twitter4j.StatusStreamImpl.onStatus(StatusStreamImpl.java:75)
	at twitter4j.StatusStreamBase$1.run(StatusStreamBase.java:105)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
[2016-06-19 20:05:52,006] INFO Back off for 100 ms before retrying send. Remaining retries = 1 (kafka.producer.async.DefaultEventHandler)
[2016-06-19 20:05:52,112] INFO Fetching metadata from broker id:0,host:192.168.99.100,port:9092 with correlation id 9 for 1 topic(s) Set(tweet) (kafka.client.ClientUtils$)
[2016-06-19 20:05:52,117] INFO Connected to 192.168.99.100:9092 for producing (kafka.producer.SyncProducer)
[2016-06-19 20:05:52,126] INFO Disconnecting from 192.168.99.100:9092 (kafka.producer.SyncProducer)
[2016-06-19 20:05:52,129] INFO Disconnecting from 08d3fe80042a:9092 (kafka.producer.SyncProducer)
[2016-06-19 20:05:52,158] INFO Connected to 08d3fe80042a:9092 for producing (kafka.producer.SyncProducer)
[2016-06-19 20:05:52,170] INFO Disconnecting from 08d3fe80042a:9092 (kafka.producer.SyncProducer)
[2016-06-19 20:05:52,178] WARN Failed to send producer request with correlation id 11 to broker 0 with data for partitions [tweet,0] (kafka.producer.async.DefaultEventHandler)
java.nio.channels.ClosedChannelException
	at kafka.network.BlockingChannel.send(BlockingChannel.scala:100)
	at kafka.producer.SyncProducer.liftedTree1$1(SyncProducer.scala:73)
	at kafka.producer.SyncProducer.kafka$producer$SyncProducer$$doSend(SyncProducer.scala:72)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply$mcV$sp(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply$mcV$sp(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer.send(SyncProducer.scala:101)
	at kafka.producer.async.DefaultEventHandler.kafka$producer$async$DefaultEventHandler$$send(DefaultEventHandler.scala:255)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:106)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:100)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:733)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:230)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:40)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:99)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:732)
	at kafka.producer.async.DefaultEventHandler.dispatchSerializedData(DefaultEventHandler.scala:100)
	at kafka.producer.async.DefaultEventHandler.handle(DefaultEventHandler.scala:72)
	at kafka.producer.Producer.send(Producer.scala:77)
	at com.twitter.producer.TwitterStreamListener.onStatus(TwitterStreamListener.scala:19)
	at twitter4j.StatusStreamImpl.onStatus(StatusStreamImpl.java:75)
	at twitter4j.StatusStreamBase$1.run(StatusStreamBase.java:105)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
[2016-06-19 20:05:52,186] INFO Back off for 100 ms before retrying send. Remaining retries = 0 (kafka.producer.async.DefaultEventHandler)
[2016-06-19 20:05:52,289] INFO Fetching metadata from broker id:0,host:192.168.99.100,port:9092 with correlation id 12 for 1 topic(s) Set(tweet) (kafka.client.ClientUtils$)
[2016-06-19 20:05:52,294] INFO Connected to 192.168.99.100:9092 for producing (kafka.producer.SyncProducer)
[2016-06-19 20:05:52,303] INFO Disconnecting from 192.168.99.100:9092 (kafka.producer.SyncProducer)
[2016-06-19 20:05:52,330] INFO Disconnecting from 08d3fe80042a:9092 (kafka.producer.SyncProducer)
[2016-06-19 20:05:52,346] ERROR Failed to send requests for topics tweet with correlation ids in [0,12] (kafka.producer.async.DefaultEventHandler)
[2016-06-19 20:05:52,508] INFO Connected to 08d3fe80042a:9092 for producing (kafka.producer.SyncProducer)
[2016-06-19 20:05:52,510] INFO Disconnecting from 08d3fe80042a:9092 (kafka.producer.SyncProducer)
[2016-06-19 20:05:52,511] WARN Failed to send producer request with correlation id 14 to broker 0 with data for partitions [tweet,0] (kafka.producer.async.DefaultEventHandler)
java.nio.channels.ClosedChannelException
	at kafka.network.BlockingChannel.send(BlockingChannel.scala:100)
	at kafka.producer.SyncProducer.liftedTree1$1(SyncProducer.scala:73)
	at kafka.producer.SyncProducer.kafka$producer$SyncProducer$$doSend(SyncProducer.scala:72)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply$mcV$sp(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply$mcV$sp(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer.send(SyncProducer.scala:101)
	at kafka.producer.async.DefaultEventHandler.kafka$producer$async$DefaultEventHandler$$send(DefaultEventHandler.scala:255)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:106)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:100)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:733)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:230)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:40)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:99)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:732)
	at kafka.producer.async.DefaultEventHandler.dispatchSerializedData(DefaultEventHandler.scala:100)
	at kafka.producer.async.DefaultEventHandler.handle(DefaultEventHandler.scala:72)
	at kafka.producer.Producer.send(Producer.scala:77)
	at com.twitter.producer.TwitterStreamListener.onStatus(TwitterStreamListener.scala:19)
	at twitter4j.StatusStreamImpl.onStatus(StatusStreamImpl.java:75)
	at twitter4j.StatusStreamBase$1.run(StatusStreamBase.java:105)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
[2016-06-19 20:05:52,522] INFO Back off for 100 ms before retrying send. Remaining retries = 3 (kafka.producer.async.DefaultEventHandler)
[2016-06-19 20:05:52,625] INFO Fetching metadata from broker id:0,host:192.168.99.100,port:9092 with correlation id 15 for 1 topic(s) Set(tweet) (kafka.client.ClientUtils$)
[2016-06-19 20:05:52,640] INFO Connected to 192.168.99.100:9092 for producing (kafka.producer.SyncProducer)
[2016-06-19 20:05:52,682] INFO Disconnecting from 192.168.99.100:9092 (kafka.producer.SyncProducer)
[2016-06-19 20:05:52,692] INFO Disconnecting from 08d3fe80042a:9092 (kafka.producer.SyncProducer)
[2016-06-19 20:05:52,725] INFO Connected to 08d3fe80042a:9092 for producing (kafka.producer.SyncProducer)
[2016-06-19 20:05:52,727] INFO Disconnecting from 08d3fe80042a:9092 (kafka.producer.SyncProducer)
[2016-06-19 20:05:52,729] WARN Failed to send producer request with correlation id 17 to broker 0 with data for partitions [tweet,0] (kafka.producer.async.DefaultEventHandler)
java.nio.channels.ClosedChannelException
	at kafka.network.BlockingChannel.send(BlockingChannel.scala:100)
	at kafka.producer.SyncProducer.liftedTree1$1(SyncProducer.scala:73)
	at kafka.producer.SyncProducer.kafka$producer$SyncProducer$$doSend(SyncProducer.scala:72)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply$mcV$sp(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply$mcV$sp(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer.send(SyncProducer.scala:101)
	at kafka.producer.async.DefaultEventHandler.kafka$producer$async$DefaultEventHandler$$send(DefaultEventHandler.scala:255)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:106)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:100)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:733)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:230)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:40)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:99)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:732)
	at kafka.producer.async.DefaultEventHandler.dispatchSerializedData(DefaultEventHandler.scala:100)
	at kafka.producer.async.DefaultEventHandler.handle(DefaultEventHandler.scala:72)
	at kafka.producer.Producer.send(Producer.scala:77)
	at com.twitter.producer.TwitterStreamListener.onStatus(TwitterStreamListener.scala:19)
	at twitter4j.StatusStreamImpl.onStatus(StatusStreamImpl.java:75)
	at twitter4j.StatusStreamBase$1.run(StatusStreamBase.java:105)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
[2016-06-19 20:05:52,740] INFO Back off for 100 ms before retrying send. Remaining retries = 2 (kafka.producer.async.DefaultEventHandler)
[2016-06-19 20:08:01,285] INFO Verifying properties (kafka.utils.VerifiableProperties)
[2016-06-19 20:08:01,308] INFO Property metadata.broker.list is overridden to 192.168.99.100:9092 (kafka.utils.VerifiableProperties)
[2016-06-19 20:08:01,310] INFO Property request.required.acks is overridden to 1 (kafka.utils.VerifiableProperties)
[2016-06-19 20:08:01,311] INFO Property serializer.class is overridden to kafka.serializer.StringEncoder (kafka.utils.VerifiableProperties)
[2016-06-19 20:08:01,675] INFO Verifying properties (kafka.utils.VerifiableProperties)
[2016-06-19 20:08:01,676] INFO Property metadata.broker.list is overridden to 192.168.99.100:9092 (kafka.utils.VerifiableProperties)
[2016-06-19 20:08:01,678] INFO Property request.required.acks is overridden to 1 (kafka.utils.VerifiableProperties)
[2016-06-19 20:08:01,679] INFO Property serializer.class is overridden to kafka.serializer.StringEncoder (kafka.utils.VerifiableProperties)
[2016-06-19 20:08:03,412] INFO Fetching metadata from broker id:0,host:192.168.99.100,port:9092 with correlation id 0 for 1 topic(s) Set(tweet) (kafka.client.ClientUtils$)
[2016-06-19 20:08:03,447] INFO Connected to 192.168.99.100:9092 for producing (kafka.producer.SyncProducer)
[2016-06-19 20:08:03,500] INFO Disconnecting from 192.168.99.100:9092 (kafka.producer.SyncProducer)
[2016-06-19 20:08:03,514] WARN Fetching topic metadata with correlation id 0 for topics [Set(tweet)] from broker [id:0,host:192.168.99.100,port:9092] failed (kafka.client.ClientUtils$)
java.io.EOFException: Received -1 when reading from channel, socket has likely been closed.
	at kafka.utils.Utils$.read(Utils.scala:381)
	at kafka.network.BoundedByteBufferReceive.readFrom(BoundedByteBufferReceive.scala:54)
	at kafka.network.Receive$class.readCompletely(Transmission.scala:56)
	at kafka.network.BoundedByteBufferReceive.readCompletely(BoundedByteBufferReceive.scala:29)
	at kafka.network.BlockingChannel.receive(BlockingChannel.scala:111)
	at kafka.producer.SyncProducer.liftedTree1$1(SyncProducer.scala:75)
	at kafka.producer.SyncProducer.kafka$producer$SyncProducer$$doSend(SyncProducer.scala:72)
	at kafka.producer.SyncProducer.send(SyncProducer.scala:113)
	at kafka.client.ClientUtils$.fetchTopicMetadata(ClientUtils.scala:58)
	at kafka.producer.BrokerPartitionInfo.updateInfo(BrokerPartitionInfo.scala:82)
	at kafka.producer.async.DefaultEventHandler$$anonfun$handle$1.apply$mcV$sp(DefaultEventHandler.scala:67)
	at kafka.utils.Utils$.swallow(Utils.scala:172)
	at kafka.utils.Logging$class.swallowError(Logging.scala:106)
	at kafka.utils.Utils$.swallowError(Utils.scala:45)
	at kafka.producer.async.DefaultEventHandler.handle(DefaultEventHandler.scala:67)
	at kafka.producer.Producer.send(Producer.scala:77)
	at com.twitter.producer.TwitterStreamListener.onStatus(TwitterStreamListener.scala:19)
	at twitter4j.StatusStreamImpl.onStatus(StatusStreamImpl.java:75)
	at twitter4j.StatusStreamBase$1.run(StatusStreamBase.java:105)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
[2016-06-19 20:08:03,528] INFO Disconnecting from 192.168.99.100:9092 (kafka.producer.SyncProducer)
[2016-06-19 20:08:03,533] ERROR fetching topic metadata for topics [Set(tweet)] from broker [ArrayBuffer(id:0,host:192.168.99.100,port:9092)] failed (kafka.utils.Utils$)
kafka.common.KafkaException: fetching topic metadata for topics [Set(tweet)] from broker [ArrayBuffer(id:0,host:192.168.99.100,port:9092)] failed
	at kafka.client.ClientUtils$.fetchTopicMetadata(ClientUtils.scala:72)
	at kafka.producer.BrokerPartitionInfo.updateInfo(BrokerPartitionInfo.scala:82)
	at kafka.producer.async.DefaultEventHandler$$anonfun$handle$1.apply$mcV$sp(DefaultEventHandler.scala:67)
	at kafka.utils.Utils$.swallow(Utils.scala:172)
	at kafka.utils.Logging$class.swallowError(Logging.scala:106)
	at kafka.utils.Utils$.swallowError(Utils.scala:45)
	at kafka.producer.async.DefaultEventHandler.handle(DefaultEventHandler.scala:67)
	at kafka.producer.Producer.send(Producer.scala:77)
	at com.twitter.producer.TwitterStreamListener.onStatus(TwitterStreamListener.scala:19)
	at twitter4j.StatusStreamImpl.onStatus(StatusStreamImpl.java:75)
	at twitter4j.StatusStreamBase$1.run(StatusStreamBase.java:105)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
Caused by: java.io.EOFException: Received -1 when reading from channel, socket has likely been closed.
	at kafka.utils.Utils$.read(Utils.scala:381)
	at kafka.network.BoundedByteBufferReceive.readFrom(BoundedByteBufferReceive.scala:54)
	at kafka.network.Receive$class.readCompletely(Transmission.scala:56)
	at kafka.network.BoundedByteBufferReceive.readCompletely(BoundedByteBufferReceive.scala:29)
	at kafka.network.BlockingChannel.receive(BlockingChannel.scala:111)
	at kafka.producer.SyncProducer.liftedTree1$1(SyncProducer.scala:75)
	at kafka.producer.SyncProducer.kafka$producer$SyncProducer$$doSend(SyncProducer.scala:72)
	at kafka.producer.SyncProducer.send(SyncProducer.scala:113)
	at kafka.client.ClientUtils$.fetchTopicMetadata(ClientUtils.scala:58)
	... 13 more
[2016-06-19 20:08:03,565] INFO Fetching metadata from broker id:0,host:192.168.99.100,port:9092 with correlation id 1 for 1 topic(s) Set(tweet) (kafka.client.ClientUtils$)
[2016-06-19 20:08:03,570] INFO Connected to 192.168.99.100:9092 for producing (kafka.producer.SyncProducer)
[2016-06-19 20:08:03,579] INFO Disconnecting from 192.168.99.100:9092 (kafka.producer.SyncProducer)
[2016-06-19 20:08:03,580] WARN Fetching topic metadata with correlation id 1 for topics [Set(tweet)] from broker [id:0,host:192.168.99.100,port:9092] failed (kafka.client.ClientUtils$)
java.io.EOFException: Received -1 when reading from channel, socket has likely been closed.
	at kafka.utils.Utils$.read(Utils.scala:381)
	at kafka.network.BoundedByteBufferReceive.readFrom(BoundedByteBufferReceive.scala:54)
	at kafka.network.Receive$class.readCompletely(Transmission.scala:56)
	at kafka.network.BoundedByteBufferReceive.readCompletely(BoundedByteBufferReceive.scala:29)
	at kafka.network.BlockingChannel.receive(BlockingChannel.scala:111)
	at kafka.producer.SyncProducer.liftedTree1$1(SyncProducer.scala:75)
	at kafka.producer.SyncProducer.kafka$producer$SyncProducer$$doSend(SyncProducer.scala:72)
	at kafka.producer.SyncProducer.send(SyncProducer.scala:113)
	at kafka.client.ClientUtils$.fetchTopicMetadata(ClientUtils.scala:58)
	at kafka.producer.BrokerPartitionInfo.updateInfo(BrokerPartitionInfo.scala:82)
	at kafka.producer.BrokerPartitionInfo.getBrokerPartitionInfo(BrokerPartitionInfo.scala:49)
	at kafka.producer.async.DefaultEventHandler.kafka$producer$async$DefaultEventHandler$$getPartitionListForTopic(DefaultEventHandler.scala:186)
	at kafka.producer.async.DefaultEventHandler$$anonfun$partitionAndCollate$1.apply(DefaultEventHandler.scala:150)
	at kafka.producer.async.DefaultEventHandler$$anonfun$partitionAndCollate$1.apply(DefaultEventHandler.scala:149)
	at scala.collection.mutable.ResizableArray$class.foreach(ResizableArray.scala:59)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:48)
	at kafka.producer.async.DefaultEventHandler.partitionAndCollate(DefaultEventHandler.scala:149)
	at kafka.producer.async.DefaultEventHandler.dispatchSerializedData(DefaultEventHandler.scala:95)
	at kafka.producer.async.DefaultEventHandler.handle(DefaultEventHandler.scala:72)
	at kafka.producer.Producer.send(Producer.scala:77)
	at com.twitter.producer.TwitterStreamListener.onStatus(TwitterStreamListener.scala:19)
	at twitter4j.StatusStreamImpl.onStatus(StatusStreamImpl.java:75)
	at twitter4j.StatusStreamBase$1.run(StatusStreamBase.java:105)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
[2016-06-19 20:08:03,592] INFO Disconnecting from 192.168.99.100:9092 (kafka.producer.SyncProducer)
[2016-06-19 20:08:03,598] ERROR Failed to collate messages by topic, partition due to: fetching topic metadata for topics [Set(tweet)] from broker [ArrayBuffer(id:0,host:192.168.99.100,port:9092)] failed (kafka.producer.async.DefaultEventHandler)
[2016-06-19 20:08:03,602] INFO Back off for 100 ms before retrying send. Remaining retries = 3 (kafka.producer.async.DefaultEventHandler)
[2016-06-19 20:08:03,708] INFO Fetching metadata from broker id:0,host:192.168.99.100,port:9092 with correlation id 2 for 1 topic(s) Set(tweet) (kafka.client.ClientUtils$)
[2016-06-19 20:08:03,712] INFO Connected to 192.168.99.100:9092 for producing (kafka.producer.SyncProducer)
[2016-06-19 20:08:03,714] INFO Disconnecting from 192.168.99.100:9092 (kafka.producer.SyncProducer)
[2016-06-19 20:08:03,715] WARN Fetching topic metadata with correlation id 2 for topics [Set(tweet)] from broker [id:0,host:192.168.99.100,port:9092] failed (kafka.client.ClientUtils$)
java.io.EOFException: Received -1 when reading from channel, socket has likely been closed.
	at kafka.utils.Utils$.read(Utils.scala:381)
	at kafka.network.BoundedByteBufferReceive.readFrom(BoundedByteBufferReceive.scala:54)
	at kafka.network.Receive$class.readCompletely(Transmission.scala:56)
	at kafka.network.BoundedByteBufferReceive.readCompletely(BoundedByteBufferReceive.scala:29)
	at kafka.network.BlockingChannel.receive(BlockingChannel.scala:111)
	at kafka.producer.SyncProducer.liftedTree1$1(SyncProducer.scala:75)
	at kafka.producer.SyncProducer.kafka$producer$SyncProducer$$doSend(SyncProducer.scala:72)
	at kafka.producer.SyncProducer.send(SyncProducer.scala:113)
	at kafka.client.ClientUtils$.fetchTopicMetadata(ClientUtils.scala:58)
	at kafka.producer.BrokerPartitionInfo.updateInfo(BrokerPartitionInfo.scala:82)
	at kafka.producer.async.DefaultEventHandler$$anonfun$handle$2.apply$mcV$sp(DefaultEventHandler.scala:78)
	at kafka.utils.Utils$.swallow(Utils.scala:172)
	at kafka.utils.Logging$class.swallowError(Logging.scala:106)
	at kafka.utils.Utils$.swallowError(Utils.scala:45)
	at kafka.producer.async.DefaultEventHandler.handle(DefaultEventHandler.scala:78)
	at kafka.producer.Producer.send(Producer.scala:77)
	at com.twitter.producer.TwitterStreamListener.onStatus(TwitterStreamListener.scala:19)
	at twitter4j.StatusStreamImpl.onStatus(StatusStreamImpl.java:75)
	at twitter4j.StatusStreamBase$1.run(StatusStreamBase.java:105)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
[2016-06-19 20:08:03,722] INFO Disconnecting from 192.168.99.100:9092 (kafka.producer.SyncProducer)
[2016-06-19 20:08:03,724] ERROR fetching topic metadata for topics [Set(tweet)] from broker [ArrayBuffer(id:0,host:192.168.99.100,port:9092)] failed (kafka.utils.Utils$)
kafka.common.KafkaException: fetching topic metadata for topics [Set(tweet)] from broker [ArrayBuffer(id:0,host:192.168.99.100,port:9092)] failed
	at kafka.client.ClientUtils$.fetchTopicMetadata(ClientUtils.scala:72)
	at kafka.producer.BrokerPartitionInfo.updateInfo(BrokerPartitionInfo.scala:82)
	at kafka.producer.async.DefaultEventHandler$$anonfun$handle$2.apply$mcV$sp(DefaultEventHandler.scala:78)
	at kafka.utils.Utils$.swallow(Utils.scala:172)
	at kafka.utils.Logging$class.swallowError(Logging.scala:106)
	at kafka.utils.Utils$.swallowError(Utils.scala:45)
	at kafka.producer.async.DefaultEventHandler.handle(DefaultEventHandler.scala:78)
	at kafka.producer.Producer.send(Producer.scala:77)
	at com.twitter.producer.TwitterStreamListener.onStatus(TwitterStreamListener.scala:19)
	at twitter4j.StatusStreamImpl.onStatus(StatusStreamImpl.java:75)
	at twitter4j.StatusStreamBase$1.run(StatusStreamBase.java:105)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
Caused by: java.io.EOFException: Received -1 when reading from channel, socket has likely been closed.
	at kafka.utils.Utils$.read(Utils.scala:381)
	at kafka.network.BoundedByteBufferReceive.readFrom(BoundedByteBufferReceive.scala:54)
	at kafka.network.Receive$class.readCompletely(Transmission.scala:56)
	at kafka.network.BoundedByteBufferReceive.readCompletely(BoundedByteBufferReceive.scala:29)
	at kafka.network.BlockingChannel.receive(BlockingChannel.scala:111)
	at kafka.producer.SyncProducer.liftedTree1$1(SyncProducer.scala:75)
	at kafka.producer.SyncProducer.kafka$producer$SyncProducer$$doSend(SyncProducer.scala:72)
	at kafka.producer.SyncProducer.send(SyncProducer.scala:113)
	at kafka.client.ClientUtils$.fetchTopicMetadata(ClientUtils.scala:58)
	... 13 more
[2016-06-19 20:08:03,728] INFO Fetching metadata from broker id:0,host:192.168.99.100,port:9092 with correlation id 3 for 1 topic(s) Set(tweet) (kafka.client.ClientUtils$)
[2016-06-19 20:08:03,730] INFO Connected to 192.168.99.100:9092 for producing (kafka.producer.SyncProducer)
[2016-06-19 20:08:03,731] INFO Disconnecting from 192.168.99.100:9092 (kafka.producer.SyncProducer)
[2016-06-19 20:08:03,733] WARN Fetching topic metadata with correlation id 3 for topics [Set(tweet)] from broker [id:0,host:192.168.99.100,port:9092] failed (kafka.client.ClientUtils$)
java.io.EOFException: Received -1 when reading from channel, socket has likely been closed.
	at kafka.utils.Utils$.read(Utils.scala:381)
	at kafka.network.BoundedByteBufferReceive.readFrom(BoundedByteBufferReceive.scala:54)
	at kafka.network.Receive$class.readCompletely(Transmission.scala:56)
	at kafka.network.BoundedByteBufferReceive.readCompletely(BoundedByteBufferReceive.scala:29)
	at kafka.network.BlockingChannel.receive(BlockingChannel.scala:111)
	at kafka.producer.SyncProducer.liftedTree1$1(SyncProducer.scala:75)
	at kafka.producer.SyncProducer.kafka$producer$SyncProducer$$doSend(SyncProducer.scala:72)
	at kafka.producer.SyncProducer.send(SyncProducer.scala:113)
	at kafka.client.ClientUtils$.fetchTopicMetadata(ClientUtils.scala:58)
	at kafka.producer.BrokerPartitionInfo.updateInfo(BrokerPartitionInfo.scala:82)
	at kafka.producer.BrokerPartitionInfo.getBrokerPartitionInfo(BrokerPartitionInfo.scala:49)
	at kafka.producer.async.DefaultEventHandler.kafka$producer$async$DefaultEventHandler$$getPartitionListForTopic(DefaultEventHandler.scala:186)
	at kafka.producer.async.DefaultEventHandler$$anonfun$partitionAndCollate$1.apply(DefaultEventHandler.scala:150)
	at kafka.producer.async.DefaultEventHandler$$anonfun$partitionAndCollate$1.apply(DefaultEventHandler.scala:149)
	at scala.collection.mutable.ResizableArray$class.foreach(ResizableArray.scala:59)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:48)
	at kafka.producer.async.DefaultEventHandler.partitionAndCollate(DefaultEventHandler.scala:149)
	at kafka.producer.async.DefaultEventHandler.dispatchSerializedData(DefaultEventHandler.scala:95)
	at kafka.producer.async.DefaultEventHandler.handle(DefaultEventHandler.scala:72)
	at kafka.producer.Producer.send(Producer.scala:77)
	at com.twitter.producer.TwitterStreamListener.onStatus(TwitterStreamListener.scala:19)
	at twitter4j.StatusStreamImpl.onStatus(StatusStreamImpl.java:75)
	at twitter4j.StatusStreamBase$1.run(StatusStreamBase.java:105)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
[2016-06-19 20:08:03,742] INFO Disconnecting from 192.168.99.100:9092 (kafka.producer.SyncProducer)
[2016-06-19 20:08:03,747] ERROR Failed to collate messages by topic, partition due to: fetching topic metadata for topics [Set(tweet)] from broker [ArrayBuffer(id:0,host:192.168.99.100,port:9092)] failed (kafka.producer.async.DefaultEventHandler)
[2016-06-19 20:08:03,748] INFO Back off for 100 ms before retrying send. Remaining retries = 2 (kafka.producer.async.DefaultEventHandler)
[2016-06-19 20:08:03,854] INFO Fetching metadata from broker id:0,host:192.168.99.100,port:9092 with correlation id 4 for 1 topic(s) Set(tweet) (kafka.client.ClientUtils$)
[2016-06-19 20:08:03,856] INFO Connected to 192.168.99.100:9092 for producing (kafka.producer.SyncProducer)
[2016-06-19 20:08:03,857] INFO Disconnecting from 192.168.99.100:9092 (kafka.producer.SyncProducer)
[2016-06-19 20:08:03,863] WARN Fetching topic metadata with correlation id 4 for topics [Set(tweet)] from broker [id:0,host:192.168.99.100,port:9092] failed (kafka.client.ClientUtils$)
java.io.EOFException: Received -1 when reading from channel, socket has likely been closed.
	at kafka.utils.Utils$.read(Utils.scala:381)
	at kafka.network.BoundedByteBufferReceive.readFrom(BoundedByteBufferReceive.scala:54)
	at kafka.network.Receive$class.readCompletely(Transmission.scala:56)
	at kafka.network.BoundedByteBufferReceive.readCompletely(BoundedByteBufferReceive.scala:29)
	at kafka.network.BlockingChannel.receive(BlockingChannel.scala:111)
	at kafka.producer.SyncProducer.liftedTree1$1(SyncProducer.scala:75)
	at kafka.producer.SyncProducer.kafka$producer$SyncProducer$$doSend(SyncProducer.scala:72)
	at kafka.producer.SyncProducer.send(SyncProducer.scala:113)
	at kafka.client.ClientUtils$.fetchTopicMetadata(ClientUtils.scala:58)
	at kafka.producer.BrokerPartitionInfo.updateInfo(BrokerPartitionInfo.scala:82)
	at kafka.producer.async.DefaultEventHandler$$anonfun$handle$2.apply$mcV$sp(DefaultEventHandler.scala:78)
	at kafka.utils.Utils$.swallow(Utils.scala:172)
	at kafka.utils.Logging$class.swallowError(Logging.scala:106)
	at kafka.utils.Utils$.swallowError(Utils.scala:45)
	at kafka.producer.async.DefaultEventHandler.handle(DefaultEventHandler.scala:78)
	at kafka.producer.Producer.send(Producer.scala:77)
	at com.twitter.producer.TwitterStreamListener.onStatus(TwitterStreamListener.scala:19)
	at twitter4j.StatusStreamImpl.onStatus(StatusStreamImpl.java:75)
	at twitter4j.StatusStreamBase$1.run(StatusStreamBase.java:105)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
[2016-06-19 20:08:03,870] INFO Disconnecting from 192.168.99.100:9092 (kafka.producer.SyncProducer)
[2016-06-19 20:08:03,872] ERROR fetching topic metadata for topics [Set(tweet)] from broker [ArrayBuffer(id:0,host:192.168.99.100,port:9092)] failed (kafka.utils.Utils$)
kafka.common.KafkaException: fetching topic metadata for topics [Set(tweet)] from broker [ArrayBuffer(id:0,host:192.168.99.100,port:9092)] failed
	at kafka.client.ClientUtils$.fetchTopicMetadata(ClientUtils.scala:72)
	at kafka.producer.BrokerPartitionInfo.updateInfo(BrokerPartitionInfo.scala:82)
	at kafka.producer.async.DefaultEventHandler$$anonfun$handle$2.apply$mcV$sp(DefaultEventHandler.scala:78)
	at kafka.utils.Utils$.swallow(Utils.scala:172)
	at kafka.utils.Logging$class.swallowError(Logging.scala:106)
	at kafka.utils.Utils$.swallowError(Utils.scala:45)
	at kafka.producer.async.DefaultEventHandler.handle(DefaultEventHandler.scala:78)
	at kafka.producer.Producer.send(Producer.scala:77)
	at com.twitter.producer.TwitterStreamListener.onStatus(TwitterStreamListener.scala:19)
	at twitter4j.StatusStreamImpl.onStatus(StatusStreamImpl.java:75)
	at twitter4j.StatusStreamBase$1.run(StatusStreamBase.java:105)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
Caused by: java.io.EOFException: Received -1 when reading from channel, socket has likely been closed.
	at kafka.utils.Utils$.read(Utils.scala:381)
	at kafka.network.BoundedByteBufferReceive.readFrom(BoundedByteBufferReceive.scala:54)
	at kafka.network.Receive$class.readCompletely(Transmission.scala:56)
	at kafka.network.BoundedByteBufferReceive.readCompletely(BoundedByteBufferReceive.scala:29)
	at kafka.network.BlockingChannel.receive(BlockingChannel.scala:111)
	at kafka.producer.SyncProducer.liftedTree1$1(SyncProducer.scala:75)
	at kafka.producer.SyncProducer.kafka$producer$SyncProducer$$doSend(SyncProducer.scala:72)
	at kafka.producer.SyncProducer.send(SyncProducer.scala:113)
	at kafka.client.ClientUtils$.fetchTopicMetadata(ClientUtils.scala:58)
	... 13 more
[2016-06-19 20:08:03,906] INFO Fetching metadata from broker id:0,host:192.168.99.100,port:9092 with correlation id 5 for 1 topic(s) Set(tweet) (kafka.client.ClientUtils$)
[2016-06-19 20:08:03,909] INFO Connected to 192.168.99.100:9092 for producing (kafka.producer.SyncProducer)
[2016-06-19 20:08:03,911] INFO Disconnecting from 192.168.99.100:9092 (kafka.producer.SyncProducer)
[2016-06-19 20:08:03,912] WARN Fetching topic metadata with correlation id 5 for topics [Set(tweet)] from broker [id:0,host:192.168.99.100,port:9092] failed (kafka.client.ClientUtils$)
java.io.EOFException: Received -1 when reading from channel, socket has likely been closed.
	at kafka.utils.Utils$.read(Utils.scala:381)
	at kafka.network.BoundedByteBufferReceive.readFrom(BoundedByteBufferReceive.scala:54)
	at kafka.network.Receive$class.readCompletely(Transmission.scala:56)
	at kafka.network.BoundedByteBufferReceive.readCompletely(BoundedByteBufferReceive.scala:29)
	at kafka.network.BlockingChannel.receive(BlockingChannel.scala:111)
	at kafka.producer.SyncProducer.liftedTree1$1(SyncProducer.scala:75)
	at kafka.producer.SyncProducer.kafka$producer$SyncProducer$$doSend(SyncProducer.scala:72)
	at kafka.producer.SyncProducer.send(SyncProducer.scala:113)
	at kafka.client.ClientUtils$.fetchTopicMetadata(ClientUtils.scala:58)
	at kafka.producer.BrokerPartitionInfo.updateInfo(BrokerPartitionInfo.scala:82)
	at kafka.producer.BrokerPartitionInfo.getBrokerPartitionInfo(BrokerPartitionInfo.scala:49)
	at kafka.producer.async.DefaultEventHandler.kafka$producer$async$DefaultEventHandler$$getPartitionListForTopic(DefaultEventHandler.scala:186)
	at kafka.producer.async.DefaultEventHandler$$anonfun$partitionAndCollate$1.apply(DefaultEventHandler.scala:150)
	at kafka.producer.async.DefaultEventHandler$$anonfun$partitionAndCollate$1.apply(DefaultEventHandler.scala:149)
	at scala.collection.mutable.ResizableArray$class.foreach(ResizableArray.scala:59)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:48)
	at kafka.producer.async.DefaultEventHandler.partitionAndCollate(DefaultEventHandler.scala:149)
	at kafka.producer.async.DefaultEventHandler.dispatchSerializedData(DefaultEventHandler.scala:95)
	at kafka.producer.async.DefaultEventHandler.handle(DefaultEventHandler.scala:72)
	at kafka.producer.Producer.send(Producer.scala:77)
	at com.twitter.producer.TwitterStreamListener.onStatus(TwitterStreamListener.scala:19)
	at twitter4j.StatusStreamImpl.onStatus(StatusStreamImpl.java:75)
	at twitter4j.StatusStreamBase$1.run(StatusStreamBase.java:105)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
[2016-06-19 20:08:03,918] INFO Disconnecting from 192.168.99.100:9092 (kafka.producer.SyncProducer)
[2016-06-19 20:08:03,920] ERROR Failed to collate messages by topic, partition due to: fetching topic metadata for topics [Set(tweet)] from broker [ArrayBuffer(id:0,host:192.168.99.100,port:9092)] failed (kafka.producer.async.DefaultEventHandler)
[2016-06-19 20:08:03,921] INFO Back off for 100 ms before retrying send. Remaining retries = 1 (kafka.producer.async.DefaultEventHandler)
[2016-06-19 20:08:04,026] INFO Fetching metadata from broker id:0,host:192.168.99.100,port:9092 with correlation id 6 for 1 topic(s) Set(tweet) (kafka.client.ClientUtils$)
[2016-06-19 20:08:04,040] INFO Connected to 192.168.99.100:9092 for producing (kafka.producer.SyncProducer)
[2016-06-19 20:08:04,042] INFO Disconnecting from 192.168.99.100:9092 (kafka.producer.SyncProducer)
[2016-06-19 20:08:04,044] WARN Fetching topic metadata with correlation id 6 for topics [Set(tweet)] from broker [id:0,host:192.168.99.100,port:9092] failed (kafka.client.ClientUtils$)
java.io.EOFException: Received -1 when reading from channel, socket has likely been closed.
	at kafka.utils.Utils$.read(Utils.scala:381)
	at kafka.network.BoundedByteBufferReceive.readFrom(BoundedByteBufferReceive.scala:54)
	at kafka.network.Receive$class.readCompletely(Transmission.scala:56)
	at kafka.network.BoundedByteBufferReceive.readCompletely(BoundedByteBufferReceive.scala:29)
	at kafka.network.BlockingChannel.receive(BlockingChannel.scala:111)
	at kafka.producer.SyncProducer.liftedTree1$1(SyncProducer.scala:75)
	at kafka.producer.SyncProducer.kafka$producer$SyncProducer$$doSend(SyncProducer.scala:72)
	at kafka.producer.SyncProducer.send(SyncProducer.scala:113)
	at kafka.client.ClientUtils$.fetchTopicMetadata(ClientUtils.scala:58)
	at kafka.producer.BrokerPartitionInfo.updateInfo(BrokerPartitionInfo.scala:82)
	at kafka.producer.async.DefaultEventHandler$$anonfun$handle$2.apply$mcV$sp(DefaultEventHandler.scala:78)
	at kafka.utils.Utils$.swallow(Utils.scala:172)
	at kafka.utils.Logging$class.swallowError(Logging.scala:106)
	at kafka.utils.Utils$.swallowError(Utils.scala:45)
	at kafka.producer.async.DefaultEventHandler.handle(DefaultEventHandler.scala:78)
	at kafka.producer.Producer.send(Producer.scala:77)
	at com.twitter.producer.TwitterStreamListener.onStatus(TwitterStreamListener.scala:19)
	at twitter4j.StatusStreamImpl.onStatus(StatusStreamImpl.java:75)
	at twitter4j.StatusStreamBase$1.run(StatusStreamBase.java:105)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
[2016-06-19 20:08:04,053] INFO Disconnecting from 192.168.99.100:9092 (kafka.producer.SyncProducer)
[2016-06-19 20:08:04,054] ERROR fetching topic metadata for topics [Set(tweet)] from broker [ArrayBuffer(id:0,host:192.168.99.100,port:9092)] failed (kafka.utils.Utils$)
kafka.common.KafkaException: fetching topic metadata for topics [Set(tweet)] from broker [ArrayBuffer(id:0,host:192.168.99.100,port:9092)] failed
	at kafka.client.ClientUtils$.fetchTopicMetadata(ClientUtils.scala:72)
	at kafka.producer.BrokerPartitionInfo.updateInfo(BrokerPartitionInfo.scala:82)
	at kafka.producer.async.DefaultEventHandler$$anonfun$handle$2.apply$mcV$sp(DefaultEventHandler.scala:78)
	at kafka.utils.Utils$.swallow(Utils.scala:172)
	at kafka.utils.Logging$class.swallowError(Logging.scala:106)
	at kafka.utils.Utils$.swallowError(Utils.scala:45)
	at kafka.producer.async.DefaultEventHandler.handle(DefaultEventHandler.scala:78)
	at kafka.producer.Producer.send(Producer.scala:77)
	at com.twitter.producer.TwitterStreamListener.onStatus(TwitterStreamListener.scala:19)
	at twitter4j.StatusStreamImpl.onStatus(StatusStreamImpl.java:75)
	at twitter4j.StatusStreamBase$1.run(StatusStreamBase.java:105)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
Caused by: java.io.EOFException: Received -1 when reading from channel, socket has likely been closed.
	at kafka.utils.Utils$.read(Utils.scala:381)
	at kafka.network.BoundedByteBufferReceive.readFrom(BoundedByteBufferReceive.scala:54)
	at kafka.network.Receive$class.readCompletely(Transmission.scala:56)
	at kafka.network.BoundedByteBufferReceive.readCompletely(BoundedByteBufferReceive.scala:29)
	at kafka.network.BlockingChannel.receive(BlockingChannel.scala:111)
	at kafka.producer.SyncProducer.liftedTree1$1(SyncProducer.scala:75)
	at kafka.producer.SyncProducer.kafka$producer$SyncProducer$$doSend(SyncProducer.scala:72)
	at kafka.producer.SyncProducer.send(SyncProducer.scala:113)
	at kafka.client.ClientUtils$.fetchTopicMetadata(ClientUtils.scala:58)
	... 13 more
[2016-06-19 20:08:04,058] INFO Fetching metadata from broker id:0,host:192.168.99.100,port:9092 with correlation id 7 for 1 topic(s) Set(tweet) (kafka.client.ClientUtils$)
[2016-06-19 20:08:04,060] INFO Connected to 192.168.99.100:9092 for producing (kafka.producer.SyncProducer)
[2016-06-19 20:08:04,062] INFO Disconnecting from 192.168.99.100:9092 (kafka.producer.SyncProducer)
[2016-06-19 20:08:04,063] WARN Fetching topic metadata with correlation id 7 for topics [Set(tweet)] from broker [id:0,host:192.168.99.100,port:9092] failed (kafka.client.ClientUtils$)
java.io.EOFException: Received -1 when reading from channel, socket has likely been closed.
	at kafka.utils.Utils$.read(Utils.scala:381)
	at kafka.network.BoundedByteBufferReceive.readFrom(BoundedByteBufferReceive.scala:54)
	at kafka.network.Receive$class.readCompletely(Transmission.scala:56)
	at kafka.network.BoundedByteBufferReceive.readCompletely(BoundedByteBufferReceive.scala:29)
	at kafka.network.BlockingChannel.receive(BlockingChannel.scala:111)
	at kafka.producer.SyncProducer.liftedTree1$1(SyncProducer.scala:75)
	at kafka.producer.SyncProducer.kafka$producer$SyncProducer$$doSend(SyncProducer.scala:72)
	at kafka.producer.SyncProducer.send(SyncProducer.scala:113)
	at kafka.client.ClientUtils$.fetchTopicMetadata(ClientUtils.scala:58)
	at kafka.producer.BrokerPartitionInfo.updateInfo(BrokerPartitionInfo.scala:82)
	at kafka.producer.BrokerPartitionInfo.getBrokerPartitionInfo(BrokerPartitionInfo.scala:49)
	at kafka.producer.async.DefaultEventHandler.kafka$producer$async$DefaultEventHandler$$getPartitionListForTopic(DefaultEventHandler.scala:186)
	at kafka.producer.async.DefaultEventHandler$$anonfun$partitionAndCollate$1.apply(DefaultEventHandler.scala:150)
	at kafka.producer.async.DefaultEventHandler$$anonfun$partitionAndCollate$1.apply(DefaultEventHandler.scala:149)
	at scala.collection.mutable.ResizableArray$class.foreach(ResizableArray.scala:59)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:48)
	at kafka.producer.async.DefaultEventHandler.partitionAndCollate(DefaultEventHandler.scala:149)
	at kafka.producer.async.DefaultEventHandler.dispatchSerializedData(DefaultEventHandler.scala:95)
	at kafka.producer.async.DefaultEventHandler.handle(DefaultEventHandler.scala:72)
	at kafka.producer.Producer.send(Producer.scala:77)
	at com.twitter.producer.TwitterStreamListener.onStatus(TwitterStreamListener.scala:19)
	at twitter4j.StatusStreamImpl.onStatus(StatusStreamImpl.java:75)
	at twitter4j.StatusStreamBase$1.run(StatusStreamBase.java:105)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
[2016-06-19 20:08:04,066] INFO Disconnecting from 192.168.99.100:9092 (kafka.producer.SyncProducer)
[2016-06-19 20:08:04,068] ERROR Failed to collate messages by topic, partition due to: fetching topic metadata for topics [Set(tweet)] from broker [ArrayBuffer(id:0,host:192.168.99.100,port:9092)] failed (kafka.producer.async.DefaultEventHandler)
[2016-06-19 20:08:04,069] INFO Back off for 100 ms before retrying send. Remaining retries = 0 (kafka.producer.async.DefaultEventHandler)
[2016-06-19 20:08:04,172] INFO Fetching metadata from broker id:0,host:192.168.99.100,port:9092 with correlation id 8 for 1 topic(s) Set(tweet) (kafka.client.ClientUtils$)
[2016-06-19 20:08:04,173] INFO Connected to 192.168.99.100:9092 for producing (kafka.producer.SyncProducer)
[2016-06-19 20:08:04,175] INFO Disconnecting from 192.168.99.100:9092 (kafka.producer.SyncProducer)
[2016-06-19 20:08:04,176] WARN Fetching topic metadata with correlation id 8 for topics [Set(tweet)] from broker [id:0,host:192.168.99.100,port:9092] failed (kafka.client.ClientUtils$)
java.io.EOFException: Received -1 when reading from channel, socket has likely been closed.
	at kafka.utils.Utils$.read(Utils.scala:381)
	at kafka.network.BoundedByteBufferReceive.readFrom(BoundedByteBufferReceive.scala:54)
	at kafka.network.Receive$class.readCompletely(Transmission.scala:56)
	at kafka.network.BoundedByteBufferReceive.readCompletely(BoundedByteBufferReceive.scala:29)
	at kafka.network.BlockingChannel.receive(BlockingChannel.scala:111)
	at kafka.producer.SyncProducer.liftedTree1$1(SyncProducer.scala:75)
	at kafka.producer.SyncProducer.kafka$producer$SyncProducer$$doSend(SyncProducer.scala:72)
	at kafka.producer.SyncProducer.send(SyncProducer.scala:113)
	at kafka.client.ClientUtils$.fetchTopicMetadata(ClientUtils.scala:58)
	at kafka.producer.BrokerPartitionInfo.updateInfo(BrokerPartitionInfo.scala:82)
	at kafka.producer.async.DefaultEventHandler$$anonfun$handle$2.apply$mcV$sp(DefaultEventHandler.scala:78)
	at kafka.utils.Utils$.swallow(Utils.scala:172)
	at kafka.utils.Logging$class.swallowError(Logging.scala:106)
	at kafka.utils.Utils$.swallowError(Utils.scala:45)
	at kafka.producer.async.DefaultEventHandler.handle(DefaultEventHandler.scala:78)
	at kafka.producer.Producer.send(Producer.scala:77)
	at com.twitter.producer.TwitterStreamListener.onStatus(TwitterStreamListener.scala:19)
	at twitter4j.StatusStreamImpl.onStatus(StatusStreamImpl.java:75)
	at twitter4j.StatusStreamBase$1.run(StatusStreamBase.java:105)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
[2016-06-19 20:08:04,181] INFO Disconnecting from 192.168.99.100:9092 (kafka.producer.SyncProducer)
[2016-06-19 20:08:04,183] ERROR fetching topic metadata for topics [Set(tweet)] from broker [ArrayBuffer(id:0,host:192.168.99.100,port:9092)] failed (kafka.utils.Utils$)
kafka.common.KafkaException: fetching topic metadata for topics [Set(tweet)] from broker [ArrayBuffer(id:0,host:192.168.99.100,port:9092)] failed
	at kafka.client.ClientUtils$.fetchTopicMetadata(ClientUtils.scala:72)
	at kafka.producer.BrokerPartitionInfo.updateInfo(BrokerPartitionInfo.scala:82)
	at kafka.producer.async.DefaultEventHandler$$anonfun$handle$2.apply$mcV$sp(DefaultEventHandler.scala:78)
	at kafka.utils.Utils$.swallow(Utils.scala:172)
	at kafka.utils.Logging$class.swallowError(Logging.scala:106)
	at kafka.utils.Utils$.swallowError(Utils.scala:45)
	at kafka.producer.async.DefaultEventHandler.handle(DefaultEventHandler.scala:78)
	at kafka.producer.Producer.send(Producer.scala:77)
	at com.twitter.producer.TwitterStreamListener.onStatus(TwitterStreamListener.scala:19)
	at twitter4j.StatusStreamImpl.onStatus(StatusStreamImpl.java:75)
	at twitter4j.StatusStreamBase$1.run(StatusStreamBase.java:105)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
Caused by: java.io.EOFException: Received -1 when reading from channel, socket has likely been closed.
	at kafka.utils.Utils$.read(Utils.scala:381)
	at kafka.network.BoundedByteBufferReceive.readFrom(BoundedByteBufferReceive.scala:54)
	at kafka.network.Receive$class.readCompletely(Transmission.scala:56)
	at kafka.network.BoundedByteBufferReceive.readCompletely(BoundedByteBufferReceive.scala:29)
	at kafka.network.BlockingChannel.receive(BlockingChannel.scala:111)
	at kafka.producer.SyncProducer.liftedTree1$1(SyncProducer.scala:75)
	at kafka.producer.SyncProducer.kafka$producer$SyncProducer$$doSend(SyncProducer.scala:72)
	at kafka.producer.SyncProducer.send(SyncProducer.scala:113)
	at kafka.client.ClientUtils$.fetchTopicMetadata(ClientUtils.scala:58)
	... 13 more
[2016-06-19 20:08:04,189] ERROR Failed to send requests for topics tweet with correlation ids in [0,8] (kafka.producer.async.DefaultEventHandler)
[2016-06-19 20:08:04,220] INFO Fetching metadata from broker id:0,host:192.168.99.100,port:9092 with correlation id 9 for 1 topic(s) Set(tweet) (kafka.client.ClientUtils$)
[2016-06-19 20:08:04,229] INFO Connected to 192.168.99.100:9092 for producing (kafka.producer.SyncProducer)
[2016-06-19 20:08:04,231] INFO Disconnecting from 192.168.99.100:9092 (kafka.producer.SyncProducer)
[2016-06-19 20:08:04,232] WARN Fetching topic metadata with correlation id 9 for topics [Set(tweet)] from broker [id:0,host:192.168.99.100,port:9092] failed (kafka.client.ClientUtils$)
java.io.EOFException: Received -1 when reading from channel, socket has likely been closed.
	at kafka.utils.Utils$.read(Utils.scala:381)
	at kafka.network.BoundedByteBufferReceive.readFrom(BoundedByteBufferReceive.scala:54)
	at kafka.network.Receive$class.readCompletely(Transmission.scala:56)
	at kafka.network.BoundedByteBufferReceive.readCompletely(BoundedByteBufferReceive.scala:29)
	at kafka.network.BlockingChannel.receive(BlockingChannel.scala:111)
	at kafka.producer.SyncProducer.liftedTree1$1(SyncProducer.scala:75)
	at kafka.producer.SyncProducer.kafka$producer$SyncProducer$$doSend(SyncProducer.scala:72)
	at kafka.producer.SyncProducer.send(SyncProducer.scala:113)
	at kafka.client.ClientUtils$.fetchTopicMetadata(ClientUtils.scala:58)
	at kafka.producer.BrokerPartitionInfo.updateInfo(BrokerPartitionInfo.scala:82)
	at kafka.producer.BrokerPartitionInfo.getBrokerPartitionInfo(BrokerPartitionInfo.scala:49)
	at kafka.producer.async.DefaultEventHandler.kafka$producer$async$DefaultEventHandler$$getPartitionListForTopic(DefaultEventHandler.scala:186)
	at kafka.producer.async.DefaultEventHandler$$anonfun$partitionAndCollate$1.apply(DefaultEventHandler.scala:150)
	at kafka.producer.async.DefaultEventHandler$$anonfun$partitionAndCollate$1.apply(DefaultEventHandler.scala:149)
	at scala.collection.mutable.ResizableArray$class.foreach(ResizableArray.scala:59)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:48)
	at kafka.producer.async.DefaultEventHandler.partitionAndCollate(DefaultEventHandler.scala:149)
	at kafka.producer.async.DefaultEventHandler.dispatchSerializedData(DefaultEventHandler.scala:95)
	at kafka.producer.async.DefaultEventHandler.handle(DefaultEventHandler.scala:72)
	at kafka.producer.Producer.send(Producer.scala:77)
	at com.twitter.producer.TwitterStreamListener.onStatus(TwitterStreamListener.scala:19)
	at twitter4j.StatusStreamImpl.onStatus(StatusStreamImpl.java:75)
	at twitter4j.StatusStreamBase$1.run(StatusStreamBase.java:105)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
[2016-06-19 20:08:04,246] INFO Disconnecting from 192.168.99.100:9092 (kafka.producer.SyncProducer)
[2016-06-19 20:08:04,248] ERROR Failed to collate messages by topic, partition due to: fetching topic metadata for topics [Set(tweet)] from broker [ArrayBuffer(id:0,host:192.168.99.100,port:9092)] failed (kafka.producer.async.DefaultEventHandler)
[2016-06-19 20:08:04,250] INFO Back off for 100 ms before retrying send. Remaining retries = 3 (kafka.producer.async.DefaultEventHandler)
[2016-06-19 20:08:04,353] INFO Fetching metadata from broker id:0,host:192.168.99.100,port:9092 with correlation id 10 for 1 topic(s) Set(tweet) (kafka.client.ClientUtils$)
[2016-06-19 20:08:04,387] INFO Connected to 192.168.99.100:9092 for producing (kafka.producer.SyncProducer)
[2016-06-19 20:08:04,390] INFO Disconnecting from 192.168.99.100:9092 (kafka.producer.SyncProducer)
[2016-06-19 20:08:04,393] WARN Fetching topic metadata with correlation id 10 for topics [Set(tweet)] from broker [id:0,host:192.168.99.100,port:9092] failed (kafka.client.ClientUtils$)
java.io.EOFException: Received -1 when reading from channel, socket has likely been closed.
	at kafka.utils.Utils$.read(Utils.scala:381)
	at kafka.network.BoundedByteBufferReceive.readFrom(BoundedByteBufferReceive.scala:54)
	at kafka.network.Receive$class.readCompletely(Transmission.scala:56)
	at kafka.network.BoundedByteBufferReceive.readCompletely(BoundedByteBufferReceive.scala:29)
	at kafka.network.BlockingChannel.receive(BlockingChannel.scala:111)
	at kafka.producer.SyncProducer.liftedTree1$1(SyncProducer.scala:75)
	at kafka.producer.SyncProducer.kafka$producer$SyncProducer$$doSend(SyncProducer.scala:72)
	at kafka.producer.SyncProducer.send(SyncProducer.scala:113)
	at kafka.client.ClientUtils$.fetchTopicMetadata(ClientUtils.scala:58)
	at kafka.producer.BrokerPartitionInfo.updateInfo(BrokerPartitionInfo.scala:82)
	at kafka.producer.async.DefaultEventHandler$$anonfun$handle$2.apply$mcV$sp(DefaultEventHandler.scala:78)
	at kafka.utils.Utils$.swallow(Utils.scala:172)
	at kafka.utils.Logging$class.swallowError(Logging.scala:106)
	at kafka.utils.Utils$.swallowError(Utils.scala:45)
	at kafka.producer.async.DefaultEventHandler.handle(DefaultEventHandler.scala:78)
	at kafka.producer.Producer.send(Producer.scala:77)
	at com.twitter.producer.TwitterStreamListener.onStatus(TwitterStreamListener.scala:19)
	at twitter4j.StatusStreamImpl.onStatus(StatusStreamImpl.java:75)
	at twitter4j.StatusStreamBase$1.run(StatusStreamBase.java:105)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
[2016-06-19 20:08:04,398] INFO Disconnecting from 192.168.99.100:9092 (kafka.producer.SyncProducer)
[2016-06-19 20:08:04,400] ERROR fetching topic metadata for topics [Set(tweet)] from broker [ArrayBuffer(id:0,host:192.168.99.100,port:9092)] failed (kafka.utils.Utils$)
kafka.common.KafkaException: fetching topic metadata for topics [Set(tweet)] from broker [ArrayBuffer(id:0,host:192.168.99.100,port:9092)] failed
	at kafka.client.ClientUtils$.fetchTopicMetadata(ClientUtils.scala:72)
	at kafka.producer.BrokerPartitionInfo.updateInfo(BrokerPartitionInfo.scala:82)
	at kafka.producer.async.DefaultEventHandler$$anonfun$handle$2.apply$mcV$sp(DefaultEventHandler.scala:78)
	at kafka.utils.Utils$.swallow(Utils.scala:172)
	at kafka.utils.Logging$class.swallowError(Logging.scala:106)
	at kafka.utils.Utils$.swallowError(Utils.scala:45)
	at kafka.producer.async.DefaultEventHandler.handle(DefaultEventHandler.scala:78)
	at kafka.producer.Producer.send(Producer.scala:77)
	at com.twitter.producer.TwitterStreamListener.onStatus(TwitterStreamListener.scala:19)
	at twitter4j.StatusStreamImpl.onStatus(StatusStreamImpl.java:75)
	at twitter4j.StatusStreamBase$1.run(StatusStreamBase.java:105)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
Caused by: java.io.EOFException: Received -1 when reading from channel, socket has likely been closed.
	at kafka.utils.Utils$.read(Utils.scala:381)
	at kafka.network.BoundedByteBufferReceive.readFrom(BoundedByteBufferReceive.scala:54)
	at kafka.network.Receive$class.readCompletely(Transmission.scala:56)
	at kafka.network.BoundedByteBufferReceive.readCompletely(BoundedByteBufferReceive.scala:29)
	at kafka.network.BlockingChannel.receive(BlockingChannel.scala:111)
	at kafka.producer.SyncProducer.liftedTree1$1(SyncProducer.scala:75)
	at kafka.producer.SyncProducer.kafka$producer$SyncProducer$$doSend(SyncProducer.scala:72)
	at kafka.producer.SyncProducer.send(SyncProducer.scala:113)
	at kafka.client.ClientUtils$.fetchTopicMetadata(ClientUtils.scala:58)
	... 13 more
[2016-06-19 20:08:04,403] INFO Fetching metadata from broker id:0,host:192.168.99.100,port:9092 with correlation id 11 for 1 topic(s) Set(tweet) (kafka.client.ClientUtils$)
[2016-06-19 20:08:04,405] INFO Connected to 192.168.99.100:9092 for producing (kafka.producer.SyncProducer)
[2016-06-19 20:08:04,407] INFO Disconnecting from 192.168.99.100:9092 (kafka.producer.SyncProducer)
[2016-06-19 20:08:04,408] WARN Fetching topic metadata with correlation id 11 for topics [Set(tweet)] from broker [id:0,host:192.168.99.100,port:9092] failed (kafka.client.ClientUtils$)
java.io.EOFException: Received -1 when reading from channel, socket has likely been closed.
	at kafka.utils.Utils$.read(Utils.scala:381)
	at kafka.network.BoundedByteBufferReceive.readFrom(BoundedByteBufferReceive.scala:54)
	at kafka.network.Receive$class.readCompletely(Transmission.scala:56)
	at kafka.network.BoundedByteBufferReceive.readCompletely(BoundedByteBufferReceive.scala:29)
	at kafka.network.BlockingChannel.receive(BlockingChannel.scala:111)
	at kafka.producer.SyncProducer.liftedTree1$1(SyncProducer.scala:75)
	at kafka.producer.SyncProducer.kafka$producer$SyncProducer$$doSend(SyncProducer.scala:72)
	at kafka.producer.SyncProducer.send(SyncProducer.scala:113)
	at kafka.client.ClientUtils$.fetchTopicMetadata(ClientUtils.scala:58)
	at kafka.producer.BrokerPartitionInfo.updateInfo(BrokerPartitionInfo.scala:82)
	at kafka.producer.BrokerPartitionInfo.getBrokerPartitionInfo(BrokerPartitionInfo.scala:49)
	at kafka.producer.async.DefaultEventHandler.kafka$producer$async$DefaultEventHandler$$getPartitionListForTopic(DefaultEventHandler.scala:186)
	at kafka.producer.async.DefaultEventHandler$$anonfun$partitionAndCollate$1.apply(DefaultEventHandler.scala:150)
	at kafka.producer.async.DefaultEventHandler$$anonfun$partitionAndCollate$1.apply(DefaultEventHandler.scala:149)
	at scala.collection.mutable.ResizableArray$class.foreach(ResizableArray.scala:59)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:48)
	at kafka.producer.async.DefaultEventHandler.partitionAndCollate(DefaultEventHandler.scala:149)
	at kafka.producer.async.DefaultEventHandler.dispatchSerializedData(DefaultEventHandler.scala:95)
	at kafka.producer.async.DefaultEventHandler.handle(DefaultEventHandler.scala:72)
	at kafka.producer.Producer.send(Producer.scala:77)
	at com.twitter.producer.TwitterStreamListener.onStatus(TwitterStreamListener.scala:19)
	at twitter4j.StatusStreamImpl.onStatus(StatusStreamImpl.java:75)
	at twitter4j.StatusStreamBase$1.run(StatusStreamBase.java:105)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
[2016-06-19 20:08:04,411] INFO Disconnecting from 192.168.99.100:9092 (kafka.producer.SyncProducer)
[2016-06-19 20:08:04,412] ERROR Failed to collate messages by topic, partition due to: fetching topic metadata for topics [Set(tweet)] from broker [ArrayBuffer(id:0,host:192.168.99.100,port:9092)] failed (kafka.producer.async.DefaultEventHandler)
[2016-06-19 20:08:04,414] INFO Back off for 100 ms before retrying send. Remaining retries = 2 (kafka.producer.async.DefaultEventHandler)
[2016-06-19 20:12:04,809] INFO Verifying properties (kafka.utils.VerifiableProperties)
[2016-06-19 20:12:04,867] INFO Property metadata.broker.list is overridden to 192.168.99.100:9092 (kafka.utils.VerifiableProperties)
[2016-06-19 20:12:04,874] INFO Property request.required.acks is overridden to 1 (kafka.utils.VerifiableProperties)
[2016-06-19 20:12:04,875] INFO Property serializer.class is overridden to kafka.serializer.StringEncoder (kafka.utils.VerifiableProperties)
[2016-06-19 20:12:05,346] INFO Verifying properties (kafka.utils.VerifiableProperties)
[2016-06-19 20:12:05,348] INFO Property metadata.broker.list is overridden to 192.168.99.100:9092 (kafka.utils.VerifiableProperties)
[2016-06-19 20:12:05,350] INFO Property request.required.acks is overridden to 1 (kafka.utils.VerifiableProperties)
[2016-06-19 20:12:05,351] INFO Property serializer.class is overridden to kafka.serializer.StringEncoder (kafka.utils.VerifiableProperties)
[2016-06-19 20:12:07,209] INFO Fetching metadata from broker id:0,host:192.168.99.100,port:9092 with correlation id 0 for 1 topic(s) Set(tweet) (kafka.client.ClientUtils$)
[2016-06-19 20:12:07,224] INFO Connected to 192.168.99.100:9092 for producing (kafka.producer.SyncProducer)
[2016-06-19 20:12:07,290] INFO Disconnecting from 192.168.99.100:9092 (kafka.producer.SyncProducer)
[2016-06-19 20:12:07,522] INFO Connected to 192.168.99.100:9092 for producing (kafka.producer.SyncProducer)
[2016-06-19 20:14:17,552] INFO Verifying properties (kafka.utils.VerifiableProperties)
[2016-06-19 20:14:17,575] INFO Property metadata.broker.list is overridden to 192.168.99.100:9092 (kafka.utils.VerifiableProperties)
[2016-06-19 20:14:17,576] INFO Property request.required.acks is overridden to 1 (kafka.utils.VerifiableProperties)
[2016-06-19 20:14:17,578] INFO Property serializer.class is overridden to kafka.serializer.StringEncoder (kafka.utils.VerifiableProperties)
[2016-06-19 20:14:17,975] INFO Verifying properties (kafka.utils.VerifiableProperties)
[2016-06-19 20:14:17,976] INFO Property metadata.broker.list is overridden to 192.168.99.100:9092 (kafka.utils.VerifiableProperties)
[2016-06-19 20:14:17,978] INFO Property request.required.acks is overridden to 1 (kafka.utils.VerifiableProperties)
[2016-06-19 20:14:17,979] INFO Property serializer.class is overridden to kafka.serializer.StringEncoder (kafka.utils.VerifiableProperties)
[2016-06-19 20:14:19,340] INFO Fetching metadata from broker id:0,host:192.168.99.100,port:9092 with correlation id 0 for 1 topic(s) Set(tweet) (kafka.client.ClientUtils$)
[2016-06-19 20:14:19,353] INFO Connected to 192.168.99.100:9092 for producing (kafka.producer.SyncProducer)
[2016-06-19 20:14:19,528] INFO Disconnecting from 192.168.99.100:9092 (kafka.producer.SyncProducer)
[2016-06-19 20:14:19,732] INFO Connected to 192.168.99.100:9092 for producing (kafka.producer.SyncProducer)
[2016-06-19 20:16:14,637] INFO Verifying properties (kafka.utils.VerifiableProperties)
[2016-06-19 20:16:14,658] INFO Property metadata.broker.list is overridden to 192.168.99.100:9092 (kafka.utils.VerifiableProperties)
[2016-06-19 20:16:14,659] INFO Property request.required.acks is overridden to 1 (kafka.utils.VerifiableProperties)
[2016-06-19 20:16:14,660] INFO Property serializer.class is overridden to kafka.serializer.StringEncoder (kafka.utils.VerifiableProperties)
[2016-06-19 20:16:14,995] INFO Verifying properties (kafka.utils.VerifiableProperties)
[2016-06-19 20:16:14,996] INFO Property metadata.broker.list is overridden to 192.168.99.100:9092 (kafka.utils.VerifiableProperties)
[2016-06-19 20:16:14,999] INFO Property request.required.acks is overridden to 1 (kafka.utils.VerifiableProperties)
[2016-06-19 20:16:15,000] INFO Property serializer.class is overridden to kafka.serializer.StringEncoder (kafka.utils.VerifiableProperties)
[2016-06-19 20:16:16,675] INFO Fetching metadata from broker id:0,host:192.168.99.100,port:9092 with correlation id 0 for 1 topic(s) Set(tweet) (kafka.client.ClientUtils$)
[2016-06-19 20:16:16,690] INFO Connected to 192.168.99.100:9092 for producing (kafka.producer.SyncProducer)
[2016-06-19 20:16:16,872] INFO Disconnecting from 192.168.99.100:9092 (kafka.producer.SyncProducer)
[2016-06-19 20:16:17,125] INFO Connected to 192.168.99.100:9092 for producing (kafka.producer.SyncProducer)
[2016-06-19 20:17:31,468] INFO Verifying properties (kafka.utils.VerifiableProperties)
[2016-06-19 20:17:31,530] INFO Property metadata.broker.list is overridden to 192.168.99.100:9092 (kafka.utils.VerifiableProperties)
[2016-06-19 20:17:31,532] INFO Property request.required.acks is overridden to 1 (kafka.utils.VerifiableProperties)
[2016-06-19 20:17:31,534] INFO Property serializer.class is overridden to kafka.serializer.StringEncoder (kafka.utils.VerifiableProperties)
[2016-06-19 20:17:32,503] INFO Verifying properties (kafka.utils.VerifiableProperties)
[2016-06-19 20:17:32,505] INFO Property metadata.broker.list is overridden to 192.168.99.100:9092 (kafka.utils.VerifiableProperties)
[2016-06-19 20:17:32,507] INFO Property request.required.acks is overridden to 1 (kafka.utils.VerifiableProperties)
[2016-06-19 20:17:32,509] INFO Property serializer.class is overridden to kafka.serializer.StringEncoder (kafka.utils.VerifiableProperties)
[2016-06-19 20:17:44,563] INFO Fetching metadata from broker id:0,host:192.168.99.100,port:9092 with correlation id 0 for 1 topic(s) Set(tweet) (kafka.client.ClientUtils$)
[2016-06-19 20:17:44,623] INFO Connected to 192.168.99.100:9092 for producing (kafka.producer.SyncProducer)
[2016-06-19 20:17:44,792] INFO Disconnecting from 192.168.99.100:9092 (kafka.producer.SyncProducer)
[2016-06-19 20:17:44,924] INFO Connected to 192.168.99.100:9092 for producing (kafka.producer.SyncProducer)
